// Generated by view binder compiler. Do not edit!
package com.eldercare.assistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eldercare.assistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessageEditorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final TextView contactNameText;

  @NonNull
  public final TextView contactPhoneText;

  @NonNull
  public final EditText messageEditText;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final TextView templateTitleText;

  @NonNull
  public final Button voiceConfirmButton;

  private ActivityMessageEditorBinding(@NonNull LinearLayout rootView, @NonNull Button clearButton,
      @NonNull TextView contactNameText, @NonNull TextView contactPhoneText,
      @NonNull EditText messageEditText, @NonNull Button sendButton,
      @NonNull TextView templateTitleText, @NonNull Button voiceConfirmButton) {
    this.rootView = rootView;
    this.clearButton = clearButton;
    this.contactNameText = contactNameText;
    this.contactPhoneText = contactPhoneText;
    this.messageEditText = messageEditText;
    this.sendButton = sendButton;
    this.templateTitleText = templateTitleText;
    this.voiceConfirmButton = voiceConfirmButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessageEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessageEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_message_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessageEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clearButton;
      Button clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.contactNameText;
      TextView contactNameText = ViewBindings.findChildViewById(rootView, id);
      if (contactNameText == null) {
        break missingId;
      }

      id = R.id.contactPhoneText;
      TextView contactPhoneText = ViewBindings.findChildViewById(rootView, id);
      if (contactPhoneText == null) {
        break missingId;
      }

      id = R.id.messageEditText;
      EditText messageEditText = ViewBindings.findChildViewById(rootView, id);
      if (messageEditText == null) {
        break missingId;
      }

      id = R.id.sendButton;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.templateTitleText;
      TextView templateTitleText = ViewBindings.findChildViewById(rootView, id);
      if (templateTitleText == null) {
        break missingId;
      }

      id = R.id.voiceConfirmButton;
      Button voiceConfirmButton = ViewBindings.findChildViewById(rootView, id);
      if (voiceConfirmButton == null) {
        break missingId;
      }

      return new ActivityMessageEditorBinding((LinearLayout) rootView, clearButton, contactNameText,
          contactPhoneText, messageEditText, sendButton, templateTitleText, voiceConfirmButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
