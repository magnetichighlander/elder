// Generated by view binder compiler. Do not edit!
package com.eldercare.assistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.eldercare.assistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseSessionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonBack;

  @NonNull
  public final Button buttonStartPause;

  @NonNull
  public final Button buttonStop;

  @NonNull
  public final LottieAnimationView lottieExerciseAnimation;

  @NonNull
  public final ProgressBar progressBarExercise;

  @NonNull
  public final TextView textExerciseDescription;

  @NonNull
  public final TextView textExerciseDuration;

  @NonNull
  public final TextView textExerciseTitle;

  @NonNull
  public final TextView textProgress;

  @NonNull
  public final TextView textTimer;

  private ActivityExerciseSessionBinding(@NonNull LinearLayout rootView, @NonNull Button buttonBack,
      @NonNull Button buttonStartPause, @NonNull Button buttonStop,
      @NonNull LottieAnimationView lottieExerciseAnimation,
      @NonNull ProgressBar progressBarExercise, @NonNull TextView textExerciseDescription,
      @NonNull TextView textExerciseDuration, @NonNull TextView textExerciseTitle,
      @NonNull TextView textProgress, @NonNull TextView textTimer) {
    this.rootView = rootView;
    this.buttonBack = buttonBack;
    this.buttonStartPause = buttonStartPause;
    this.buttonStop = buttonStop;
    this.lottieExerciseAnimation = lottieExerciseAnimation;
    this.progressBarExercise = progressBarExercise;
    this.textExerciseDescription = textExerciseDescription;
    this.textExerciseDuration = textExerciseDuration;
    this.textExerciseTitle = textExerciseTitle;
    this.textProgress = textProgress;
    this.textTimer = textTimer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseSessionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseSessionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise_session, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseSessionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBack;
      Button buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.buttonStartPause;
      Button buttonStartPause = ViewBindings.findChildViewById(rootView, id);
      if (buttonStartPause == null) {
        break missingId;
      }

      id = R.id.buttonStop;
      Button buttonStop = ViewBindings.findChildViewById(rootView, id);
      if (buttonStop == null) {
        break missingId;
      }

      id = R.id.lottieExerciseAnimation;
      LottieAnimationView lottieExerciseAnimation = ViewBindings.findChildViewById(rootView, id);
      if (lottieExerciseAnimation == null) {
        break missingId;
      }

      id = R.id.progressBarExercise;
      ProgressBar progressBarExercise = ViewBindings.findChildViewById(rootView, id);
      if (progressBarExercise == null) {
        break missingId;
      }

      id = R.id.textExerciseDescription;
      TextView textExerciseDescription = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseDescription == null) {
        break missingId;
      }

      id = R.id.textExerciseDuration;
      TextView textExerciseDuration = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseDuration == null) {
        break missingId;
      }

      id = R.id.textExerciseTitle;
      TextView textExerciseTitle = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseTitle == null) {
        break missingId;
      }

      id = R.id.textProgress;
      TextView textProgress = ViewBindings.findChildViewById(rootView, id);
      if (textProgress == null) {
        break missingId;
      }

      id = R.id.textTimer;
      TextView textTimer = ViewBindings.findChildViewById(rootView, id);
      if (textTimer == null) {
        break missingId;
      }

      return new ActivityExerciseSessionBinding((LinearLayout) rootView, buttonBack,
          buttonStartPause, buttonStop, lottieExerciseAnimation, progressBarExercise,
          textExerciseDescription, textExerciseDuration, textExerciseTitle, textProgress,
          textTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
