// Generated by view binder compiler. Do not edit!
package com.eldercare.assistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eldercare.assistant.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExerciseProgressBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView textBestDuration;

  @NonNull
  public final TextView textCompletionCount;

  @NonNull
  public final TextView textExerciseId;

  @NonNull
  public final TextView textLastCompleted;

  private ItemExerciseProgressBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView textBestDuration, @NonNull TextView textCompletionCount,
      @NonNull TextView textExerciseId, @NonNull TextView textLastCompleted) {
    this.rootView = rootView;
    this.textBestDuration = textBestDuration;
    this.textCompletionCount = textCompletionCount;
    this.textExerciseId = textExerciseId;
    this.textLastCompleted = textLastCompleted;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExerciseProgressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExerciseProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_exercise_progress, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExerciseProgressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textBestDuration;
      TextView textBestDuration = ViewBindings.findChildViewById(rootView, id);
      if (textBestDuration == null) {
        break missingId;
      }

      id = R.id.textCompletionCount;
      TextView textCompletionCount = ViewBindings.findChildViewById(rootView, id);
      if (textCompletionCount == null) {
        break missingId;
      }

      id = R.id.textExerciseId;
      TextView textExerciseId = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseId == null) {
        break missingId;
      }

      id = R.id.textLastCompleted;
      TextView textLastCompleted = ViewBindings.findChildViewById(rootView, id);
      if (textLastCompleted == null) {
        break missingId;
      }

      return new ItemExerciseProgressBinding((MaterialCardView) rootView, textBestDuration,
          textCompletionCount, textExerciseId, textLastCompleted);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
