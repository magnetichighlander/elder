// Generated by view binder compiler. Do not edit!
package com.eldercare.assistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eldercare.assistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseStatsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView recyclerViewProgress;

  @NonNull
  public final TextView textAverageCompletions;

  @NonNull
  public final TextView textBestDuration;

  @NonNull
  public final TextView textCurrentStreak;

  @NonNull
  public final TextView textTotalCompletions;

  @NonNull
  public final TextView textTotalExercises;

  @NonNull
  public final Toolbar toolbar;

  private ActivityExerciseStatsBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView recyclerViewProgress, @NonNull TextView textAverageCompletions,
      @NonNull TextView textBestDuration, @NonNull TextView textCurrentStreak,
      @NonNull TextView textTotalCompletions, @NonNull TextView textTotalExercises,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.recyclerViewProgress = recyclerViewProgress;
    this.textAverageCompletions = textAverageCompletions;
    this.textBestDuration = textBestDuration;
    this.textCurrentStreak = textCurrentStreak;
    this.textTotalCompletions = textTotalCompletions;
    this.textTotalExercises = textTotalExercises;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseStatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseStatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise_stats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseStatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewProgress;
      RecyclerView recyclerViewProgress = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewProgress == null) {
        break missingId;
      }

      id = R.id.textAverageCompletions;
      TextView textAverageCompletions = ViewBindings.findChildViewById(rootView, id);
      if (textAverageCompletions == null) {
        break missingId;
      }

      id = R.id.textBestDuration;
      TextView textBestDuration = ViewBindings.findChildViewById(rootView, id);
      if (textBestDuration == null) {
        break missingId;
      }

      id = R.id.textCurrentStreak;
      TextView textCurrentStreak = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentStreak == null) {
        break missingId;
      }

      id = R.id.textTotalCompletions;
      TextView textTotalCompletions = ViewBindings.findChildViewById(rootView, id);
      if (textTotalCompletions == null) {
        break missingId;
      }

      id = R.id.textTotalExercises;
      TextView textTotalExercises = ViewBindings.findChildViewById(rootView, id);
      if (textTotalExercises == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityExerciseStatsBinding((LinearLayout) rootView, recyclerViewProgress,
          textAverageCompletions, textBestDuration, textCurrentStreak, textTotalCompletions,
          textTotalExercises, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
