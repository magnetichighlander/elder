// Generated by view binder compiler. Do not edit!
package com.eldercare.assistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eldercare.assistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMedicationVoiceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final TextView instructionText;

  @NonNull
  public final Button startListeningButton;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final View voiceVisualizer;

  private ActivityMedicationVoiceBinding(@NonNull LinearLayout rootView, @NonNull Button backButton,
      @NonNull TextView instructionText, @NonNull Button startListeningButton,
      @NonNull TextView statusText, @NonNull View voiceVisualizer) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.instructionText = instructionText;
    this.startListeningButton = startListeningButton;
    this.statusText = statusText;
    this.voiceVisualizer = voiceVisualizer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMedicationVoiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMedicationVoiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_medication_voice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMedicationVoiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.instructionText;
      TextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.startListeningButton;
      Button startListeningButton = ViewBindings.findChildViewById(rootView, id);
      if (startListeningButton == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.voiceVisualizer;
      View voiceVisualizer = ViewBindings.findChildViewById(rootView, id);
      if (voiceVisualizer == null) {
        break missingId;
      }

      return new ActivityMedicationVoiceBinding((LinearLayout) rootView, backButton,
          instructionText, startListeningButton, statusText, voiceVisualizer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
